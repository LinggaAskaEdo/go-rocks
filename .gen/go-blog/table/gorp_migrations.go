//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var GorpMigrations = newGorpMigrationsTable("go-blog", "gorp_migrations", "")

type gorpMigrationsTable struct {
	mysql.Table

	// Columns
	ID        mysql.ColumnString
	AppliedAt mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type GorpMigrationsTable struct {
	gorpMigrationsTable

	NEW gorpMigrationsTable
}

// AS creates new GorpMigrationsTable with assigned alias
func (a GorpMigrationsTable) AS(alias string) *GorpMigrationsTable {
	return newGorpMigrationsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new GorpMigrationsTable with assigned schema name
func (a GorpMigrationsTable) FromSchema(schemaName string) *GorpMigrationsTable {
	return newGorpMigrationsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new GorpMigrationsTable with assigned table prefix
func (a GorpMigrationsTable) WithPrefix(prefix string) *GorpMigrationsTable {
	return newGorpMigrationsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new GorpMigrationsTable with assigned table suffix
func (a GorpMigrationsTable) WithSuffix(suffix string) *GorpMigrationsTable {
	return newGorpMigrationsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newGorpMigrationsTable(schemaName, tableName, alias string) *GorpMigrationsTable {
	return &GorpMigrationsTable{
		gorpMigrationsTable: newGorpMigrationsTableImpl(schemaName, tableName, alias),
		NEW:                 newGorpMigrationsTableImpl("", "new", ""),
	}
}

func newGorpMigrationsTableImpl(schemaName, tableName, alias string) gorpMigrationsTable {
	var (
		IDColumn        = mysql.StringColumn("id")
		AppliedAtColumn = mysql.TimestampColumn("applied_at")
		allColumns      = mysql.ColumnList{IDColumn, AppliedAtColumn}
		mutableColumns  = mysql.ColumnList{AppliedAtColumn}
	)

	return gorpMigrationsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		AppliedAt: AppliedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
