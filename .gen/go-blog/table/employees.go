//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Employees = newEmployeesTable("go-blog", "employees", "")

type employeesTable struct {
	mysql.Table

	// Columns
	EmpNo     mysql.ColumnInteger
	BirthDate mysql.ColumnDate
	FirstName mysql.ColumnString
	LastName  mysql.ColumnString
	Gender    mysql.ColumnString
	HireDate  mysql.ColumnDate

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EmployeesTable struct {
	employeesTable

	NEW employeesTable
}

// AS creates new EmployeesTable with assigned alias
func (a EmployeesTable) AS(alias string) *EmployeesTable {
	return newEmployeesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EmployeesTable with assigned schema name
func (a EmployeesTable) FromSchema(schemaName string) *EmployeesTable {
	return newEmployeesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EmployeesTable with assigned table prefix
func (a EmployeesTable) WithPrefix(prefix string) *EmployeesTable {
	return newEmployeesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EmployeesTable with assigned table suffix
func (a EmployeesTable) WithSuffix(suffix string) *EmployeesTable {
	return newEmployeesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEmployeesTable(schemaName, tableName, alias string) *EmployeesTable {
	return &EmployeesTable{
		employeesTable: newEmployeesTableImpl(schemaName, tableName, alias),
		NEW:            newEmployeesTableImpl("", "new", ""),
	}
}

func newEmployeesTableImpl(schemaName, tableName, alias string) employeesTable {
	var (
		EmpNoColumn     = mysql.IntegerColumn("emp_no")
		BirthDateColumn = mysql.DateColumn("birth_date")
		FirstNameColumn = mysql.StringColumn("first_name")
		LastNameColumn  = mysql.StringColumn("last_name")
		GenderColumn    = mysql.StringColumn("gender")
		HireDateColumn  = mysql.DateColumn("hire_date")
		allColumns      = mysql.ColumnList{EmpNoColumn, BirthDateColumn, FirstNameColumn, LastNameColumn, GenderColumn, HireDateColumn}
		mutableColumns  = mysql.ColumnList{BirthDateColumn, FirstNameColumn, LastNameColumn, GenderColumn, HireDateColumn}
	)

	return employeesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		EmpNo:     EmpNoColumn,
		BirthDate: BirthDateColumn,
		FirstName: FirstNameColumn,
		LastName:  LastNameColumn,
		Gender:    GenderColumn,
		HireDate:  HireDateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
