//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Departments = newDepartmentsTable("go-blog", "departments", "")

type departmentsTable struct {
	mysql.Table

	// Columns
	DeptNo   mysql.ColumnString
	DeptName mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type DepartmentsTable struct {
	departmentsTable

	NEW departmentsTable
}

// AS creates new DepartmentsTable with assigned alias
func (a DepartmentsTable) AS(alias string) *DepartmentsTable {
	return newDepartmentsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DepartmentsTable with assigned schema name
func (a DepartmentsTable) FromSchema(schemaName string) *DepartmentsTable {
	return newDepartmentsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DepartmentsTable with assigned table prefix
func (a DepartmentsTable) WithPrefix(prefix string) *DepartmentsTable {
	return newDepartmentsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DepartmentsTable with assigned table suffix
func (a DepartmentsTable) WithSuffix(suffix string) *DepartmentsTable {
	return newDepartmentsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDepartmentsTable(schemaName, tableName, alias string) *DepartmentsTable {
	return &DepartmentsTable{
		departmentsTable: newDepartmentsTableImpl(schemaName, tableName, alias),
		NEW:              newDepartmentsTableImpl("", "new", ""),
	}
}

func newDepartmentsTableImpl(schemaName, tableName, alias string) departmentsTable {
	var (
		DeptNoColumn   = mysql.StringColumn("dept_no")
		DeptNameColumn = mysql.StringColumn("dept_name")
		allColumns     = mysql.ColumnList{DeptNoColumn, DeptNameColumn}
		mutableColumns = mysql.ColumnList{DeptNameColumn}
	)

	return departmentsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		DeptNo:   DeptNoColumn,
		DeptName: DeptNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
